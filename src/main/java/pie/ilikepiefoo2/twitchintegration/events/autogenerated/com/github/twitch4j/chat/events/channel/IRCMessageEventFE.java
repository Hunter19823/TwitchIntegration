package pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel;


public class IRCMessageEventFE extends net.minecraftforge.eventbus.api.Event {
    public final com.github.twitch4j.chat.events.channel.IRCMessageEvent event;

    public IRCMessageEventFE( com.github.twitch4j.chat.events.channel.IRCMessageEvent event )
    {
        this.event = event;
    }

    public boolean equals( java.lang.Object arg0 ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.equals( arg0 );
    }
    public java.lang.String toString( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.toString(  );
    }
    public int hashCode( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.hashCode(  );
    }
    public java.util.Optional getMessage( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getMessage(  );
    }
    public com.github.twitch4j.common.events.domain.EventChannel getChannel( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getChannel(  );
    }
    public java.util.List getFlags( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getFlags(  );
    }
    public java.lang.Boolean isValid( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.isValid(  );
    }
    public java.util.Set getClientPermissions( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getClientPermissions(  );
    }
    public java.util.OptionalInt getSubscriberMonths( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getSubscriberMonths(  );
    }
    public java.util.OptionalInt getSubscriptionTier( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getSubscriptionTier(  );
    }
    public com.github.twitch4j.common.events.domain.EventUser getUser( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getUser(  );
    }
    public java.lang.String getChannelId( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getChannelId(  );
    }
    public java.lang.String getRawMessage( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getRawMessage(  );
    }
    public java.util.Map parseTags( java.lang.String arg0 ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.parseTags( arg0 );
    }
    public java.util.Optional getNonce( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getNonce(  );
    }
    public java.util.Optional getPayload( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getPayload(  );
    }
    public java.util.Optional getTagValue( java.lang.String arg0 ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getTagValue( arg0 );
    }
    public java.util.Map getBadges( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getBadges(  );
    }
    public java.util.Optional getMessageId( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getMessageId(  );
    }
    public java.lang.String getUserId( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getUserId(  );
    }
    public java.lang.String getUserName( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getUserName(  );
    }
    public java.util.Optional parseClientName( java.lang.String arg0 ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.parseClientName( arg0 );
    }
    public java.lang.String getTargetUserId( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getTargetUserId(  );
    }
    public com.github.twitch4j.common.events.domain.EventUser getTargetUser( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getTargetUser(  );
    }
    public java.util.Map getBadgeInfo( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getBadgeInfo(  );
    }
    public java.lang.String getCommandType( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getCommandType(  );
    }
    public java.util.Optional getChannelName( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getChannelName(  );
    }
    public java.util.Map getRawTags( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getRawTags(  );
    }
    public java.util.Map getTags( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getTags(  );
    }
    public java.util.Optional getClientName( ) // Declaring Class: com.github.twitch4j.chat.events.channel.IRCMessageEvent
    {
        return this.event.getClientName(  );
    }
    public com.github.twitch4j.chat.TwitchChat getTwitchChat( ) // Declaring Class: com.github.twitch4j.chat.events.TwitchEvent
    {
        return this.event.getTwitchChat(  );
    }
    public void setEventId( java.lang.String arg0 ) // Declaring Class: com.github.philippheuer.events4j.core.domain.Event
    {
        this.event.setEventId( arg0 );
    }
    public void setFiredAtInstant( java.time.Instant arg0 ) // Declaring Class: com.github.philippheuer.events4j.core.domain.Event
    {
        this.event.setFiredAtInstant( arg0 );
    }
    public java.time.Instant getFiredAtInstant( ) // Declaring Class: com.github.philippheuer.events4j.core.domain.Event
    {
        return this.event.getFiredAtInstant(  );
    }
    public void setFiredAt( java.util.Calendar arg0 ) // Declaring Class: com.github.philippheuer.events4j.core.domain.Event
    {
        this.event.setFiredAt( arg0 );
    }
    public java.lang.String getEventId( ) // Declaring Class: com.github.philippheuer.events4j.core.domain.Event
    {
        return this.event.getEventId(  );
    }
    public java.util.Calendar getFiredAt( ) // Declaring Class: com.github.philippheuer.events4j.core.domain.Event
    {
        return this.event.getFiredAt(  );
    }
    public com.github.philippheuer.events4j.api.service.IServiceMediator getServiceMediator( ) // Declaring Class: com.github.philippheuer.events4j.core.domain.Event
    {
        return this.event.getServiceMediator(  );
    }
    public void setServiceMediator( com.github.philippheuer.events4j.api.service.IServiceMediator arg0 ) // Declaring Class: com.github.philippheuer.events4j.core.domain.Event
    {
        this.event.setServiceMediator( arg0 );
    }

}
