package pie.ilikepiefoo2.twitchintegration;

import com.github.philippheuer.events4j.core.domain.Event;
import com.github.twitch4j.TwitchClient;
import javassist.Modifier;
import net.minecraftforge.common.MinecraftForge;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.reflections.Reflections;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.lang.reflect.Method;
import java.lang.reflect.Parameter;
import java.util.Set;

public class TwitchEventHandler {
    private static final Logger LOGGER = LogManager.getLogger(TwitchEventHandler.class);

    public static void attachForgeEventHandlers( TwitchClient twitchClient)
    {
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.CheerbombEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.CheerbombEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.HostOnEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.HostOnEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.OnsiteNotificationCreationEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.OnsiteNotificationCreationEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.events.ChannelGoOfflineEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.events.ChannelGoOfflineEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ChannelMessageEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ChannelMessageEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.PredictionCreatedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.PredictionCreatedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.UpdateRedemptionStatusesEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.UpdateRedemptionStatusesEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.CustomRewardUpdatedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.CustomRewardUpdatedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ClaimAvailableEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ClaimAvailableEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.CustomRewardEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.CustomRewardEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ChannelMessageActionEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ChannelMessageActionEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.HypeTrainConductorUpdateEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.HypeTrainConductorUpdateEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ChannelBitsEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ChannelBitsEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.PresenceSettingsEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.PresenceSettingsEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.PredictionUpdatedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.PredictionUpdatedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.MessageDeleteSuccess.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.MessageDeleteSuccessFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.PointsEarnedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.PointsEarnedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.UpdateRedemptionProgressEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.UpdateRedemptionProgressEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.FollowingEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.FollowingEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.RitualEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.RitualEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.common.events.channel.ChannelChangeGameEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.common.events.channel.ChannelChangeGameEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.common.events.channel.ChannelGoLiveEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.common.events.channel.ChannelGoLiveEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.DonationEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.DonationEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.SubscriptionEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.SubscriptionEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.UserBanEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.UserBanEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.PointsSpentEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.PointsSpentEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.UserUnbanRequestUpdateEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.UserUnbanRequestUpdateEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.modules.event.ModuleDisabledEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.modules.event.ModuleDisabledEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.LeaderboardEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.LeaderboardEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.roomstate.FollowersOnlyEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.roomstate.FollowersOnlyEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ChannelCommerceEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ChannelCommerceEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.FollowEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.FollowEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.RewardRedeemedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.RewardRedeemedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.BitsBadgeEarnedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.BitsBadgeEarnedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.RaidEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.RaidEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.roomstate.SlowModeEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.roomstate.SlowModeEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.PollsEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.PollsEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.RedemptionStatusUpdateEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.RedemptionStatusUpdateEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.AbstractChannelEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.AbstractChannelEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.roomstate.BroadcasterLanguageEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.roomstate.BroadcasterLanguageEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.HypeTrainStartEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.HypeTrainStartEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.UserPredictionResultEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.UserPredictionResultEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.MessageDeleteError.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.MessageDeleteErrorFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.HypeTrainRewardsEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.HypeTrainRewardsEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.CheerEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.CheerEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.CustomRewardDeletedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.CustomRewardDeletedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.roomstate.ChannelStatesEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.roomstate.ChannelStatesEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.HostOffEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.HostOffEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.UserPredictionMadeEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.UserPredictionMadeEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.RaidGoEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.RaidGoEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.VideoPlaybackEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.VideoPlaybackEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.PrimeSubUpgradeEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.PrimeSubUpgradeEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ClaimClaimedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ClaimClaimedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.HypeTrainProgressionEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.HypeTrainProgressionEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ChannelUnbanRequestUpdateEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ChannelUnbanRequestUpdateEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ChannelSubscribeEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ChannelSubscribeEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.PayForwardEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.PayForwardEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.UserStateEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.UserStateEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.HypeTrainLevelUpEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.HypeTrainLevelUpEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.roomstate.Robot9000Event.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.roomstate.Robot9000EventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.IRCMessageEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.IRCMessageEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.events.ChannelGoLiveEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.events.ChannelGoLiveEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.PubSubListenResponseEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.PubSubListenResponseEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.common.events.TwitchEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.common.events.TwitchEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ChannelBitsBadgeUnlockEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ChannelBitsBadgeUnlockEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.TwitchEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.TwitchEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.common.events.user.PrivateMessageEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.common.events.user.PrivateMessageEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ChannelSubGiftEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ChannelSubGiftEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ListVipsEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ListVipsEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.HypeTrainCooldownExpirationEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.HypeTrainCooldownExpirationEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.HypeTrainEndEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.HypeTrainEndEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.UnbanRequestEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.UnbanRequestEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.roomstate.EmoteOnlyEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.roomstate.EmoteOnlyEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.UserPresenceEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.UserPresenceEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.events.ChannelChangeGameEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.events.ChannelChangeGameEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.RadioEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.RadioEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.PrimeGiftReceivedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.PrimeGiftReceivedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.GiftSubUpgradeEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.GiftSubUpgradeEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.roomstate.SubscribersOnlyEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.roomstate.SubscribersOnlyEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.CustomRewardCreatedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.CustomRewardCreatedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ChannelModEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ChannelModEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.GiftSubscriptionsEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.GiftSubscriptionsEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ChannelUnbanRequestCreateEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ChannelUnbanRequestCreateEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.modules.event.ModuleEnabledEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.modules.event.ModuleEnabledEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.RaidUpdateEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.RaidUpdateEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.common.events.channel.ChannelChangeTitleEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.common.events.channel.ChannelChangeTitleEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ExtendSubscriptionEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ExtendSubscriptionEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ChatModerationEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ChatModerationEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.UpdateOnsiteNotificationSummaryEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.UpdateOnsiteNotificationSummaryEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.UpdateRedemptionFinishedEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.UpdateRedemptionFinishedEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.events.ChannelFollowCountUpdateEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.events.ChannelFollowCountUpdateEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ListModsEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ListModsEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ClearChatEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ClearChatEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ChannelNoticeEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ChannelNoticeEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.common.events.channel.ChannelGoOfflineEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.common.events.channel.ChannelGoOfflineEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.CommandEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.CommandEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.BitsLeaderboardEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.BitsLeaderboardEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.UserTimeoutEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.UserTimeoutEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.RaidCancellationEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.RaidCancellationEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.FriendshipEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.FriendshipEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ChannelLeaveEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ChannelLeaveEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.SubLeaderboardEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.SubLeaderboardEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.RewardGiftEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.RewardGiftEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ChannelStateEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ChannelStateEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.events.ChannelChangeTitleEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.events.ChannelChangeTitleEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.ChannelPointsRedemptionEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.ChannelPointsRedemptionEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.pubsub.events.RaidCancelEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.pubsub.events.RaidCancelEventFE(event) ); } );
        twitchClient.getEventManager().onEvent( com.github.twitch4j.chat.events.channel.ChannelJoinEvent.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.com.github.twitch4j.chat.events.channel.ChannelJoinEventFE(event) ); } );
    }

    public static void main( String[] args )
    {
        Reflections reflections = new Reflections("com");
        Set<Class<? extends Event>> classes = reflections.getSubTypesOf(com.github.philippheuer.events4j.core.domain.Event.class);
        System.out.println(classes.size());
        classes.stream().forEach( subject ->{
            //System.out.println(subject.getName());
            //System.out.println(subject.getDeclaredFields().length);
            //System.out.println(subject.getDeclaredMethods().length);
            //System.out.println(toJavaFile(subject));
            //generateFEFile(subject);

            printEventHandlerHook(subject);

        });
    }

    private static void generateFEFile(Class<? extends Event> subject)
    {
        if(Modifier.isPublic(subject.getModifiers())) {
            try {
                saveToFile("src/main/java/pie/ilikepiefoo2/twitchintegration/events/autogenerated/" + subject.getPackage().getName().replace(".", "/") + "/" + subject.getSimpleName() + "FE.java", toJavaFile(subject));
            } catch (IOException e) {
                System.out.println(e);
                e.printStackTrace();
            }
        }
    }
    private static void printEventHandlerHook(Class<? extends Event> subject)
    {
        if(Modifier.isPublic(subject.getModifiers())) {
            System.out.println(
                    String.format("%s.getEventManager().onEvent( %s.class, event -> { MinecraftForge.EVENT_BUS.post( new pie.ilikepiefoo2.twitchintegration.events.autogenerated.%s.%sFE(event) ); } );",
                            "twitchClient",
                            subject.getName().replace("$", "."),
                            subject.getPackage().getName(),
                            subject.getSimpleName().replace("$", ".")
                    )
            );
        }
    }

    private static void saveToFile(String path, String content) throws IOException
    {
        File file = new File(path).getAbsoluteFile();
        System.out.println(file.getPath());
        file.getParentFile().mkdirs();
        BufferedWriter writer = null;
        writer = new BufferedWriter(new FileWriter(file));
        writer.write(content);
        writer.close();
    }

    private static <T extends Event> String toJavaFile(Class<T> subject)
    {
        StringBuilder builder = new StringBuilder();
        String newClassName = subject.getSimpleName()+"FE";
        // Package
        builder.append("package pie.ilikepiefoo2.twitchintegration.events.autogenerated.");
        builder.append(subject.getPackage().getName());
        builder.append(";\n\n\n");

        // Class
        builder.append("public class ");
        builder.append(newClassName);
        builder.append(" extends net.minecraftforge.eventbus.api.Event {\n");
        // Event field
        builder.append("    private final ");
        builder.append(subject.getName());
        builder.append(" event;\n\n");
        // Constructor
        builder.append("    public ");
        builder.append(newClassName);
        builder.append("( ");
        builder.append(subject.getName());
        builder.append(" event )\n    {\n        this.event = event;\n    }\n\n");

        // Methods
        for(Method method : subject.getMethods()){
            appendMethod(builder, method);
        }

        // Closing Bracket
        builder.append("\n}\n");
        return builder.toString();
    }

    private static void appendMethod( StringBuilder builder, Method method)
    {
        if(Modifier.isPublic(method.getModifiers()) && !method.getDeclaringClass().equals(Object.class) && !Modifier.isVolatile(method.getModifiers())) {
            StringBuilder paramBuilder = new StringBuilder("");
            builder.append("    ");
            builder.append(Modifier.toString(method.getModifiers()));
            builder.append(" ");
            builder.append(method.getReturnType().getName().replace("$","."));
            builder.append(" ");
            builder.append(method.getName());
            builder.append("( ");
            Parameter parameter;
            Parameter[] parameters = method.getParameters();
            for(int i=0; i<method.getParameterCount(); i++){
                parameter = parameters[i];
                builder.append(parameter.getType().getName().replace("$","."));
                builder.append(" ");
                paramBuilder.append("arg");
                paramBuilder.append(i);
                builder.append("arg");
                builder.append(i);
                if(i!=method.getParameterCount()-1) {
                    builder.append(",");
                    paramBuilder.append(",");
                }
                builder.append(" ");
            }
            builder.append(") // Declaring Class: ");
            builder.append(method.getDeclaringClass().getName());
            builder.append("\n    {\n        ");
            if(!method.getReturnType().equals(Void.TYPE)){
                builder.append("return ");
            }
            builder.append("this.event.");
            builder.append(method.getName());
            builder.append("( ");
            builder.append(paramBuilder);
            builder.append(" );\n");
            builder.append("\n    }\n");

        }
    }
}
